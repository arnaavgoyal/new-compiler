#ifndef TOKEN
#define TOKEN(X) 
#endif

#ifndef KEYWORD
#define KEYWORD(X)
#endif

#ifndef OPERATOR
#define OPERATOR(X,Y)
#endif

// tokens

TOKEN(unknown)

TOKEN(eof)

TOKEN(comment)

TOKEN(identifier)

TOKEN(numeric_literal)
TOKEN(character_literal)
TOKEN(string_literal)


// keywords

KEYWORD(if)
KEYWORD(else)
KEYWORD(for)
KEYWORD(while)
KEYWORD(continue)
KEYWORD(break)
KEYWORD(return)

KEYWORD(bool)
KEYWORD(i16)
KEYWORD(u16)
KEYWORD(i32)
KEYWORD(u32)
KEYWORD(i64)
KEYWORD(u64)
KEYWORD(f32)
KEYWORD(f64)

// operators

OPERATOR(leftparen, "(")
OPERATOR(rightparen, ")")
OPERATOR(leftbracket, "[")
OPERATOR(rightbracket, "]")
OPERATOR(leftbrace, "{")
OPERATOR(rightbrace, "}")

OPERATOR(plusplus, "++")
OPERATOR(minusminus, "--")
OPERATOR(plus, "+")
OPERATOR(minus, "-")
OPERATOR(asterisk, "*")
OPERATOR(slash, "/")
OPERATOR(percent, "%")
OPERATOR(amp, "&")

OPERATOR(exclamation, "!")
OPERATOR(ampamp, "&&")
OPERATOR(pipepipe, "||")

OPERATOR(greater, ">")
OPERATOR(less, "<")
OPERATOR(greaterequal, ">=")
OPERATOR(lessequal, "<=")
OPERATOR(equalequal, "==")
OPERATOR(exclamationequal, "!=")

OPERATOR(equal, "=")

OPERATOR(comma, ",")
OPERATOR(semicolon, ";")

#undef OPERATOR
#undef KEYWORD
#undef TOKEN